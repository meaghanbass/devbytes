{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog-pages/markdown-styling/","webpackCompilationHash":"c14f4717544df6c14aee","result":{"data":{"markdownRemark":{"html":"<h1 style=\"text-align:center;border-top: solid 1px rgba(102,119,136,.2);padding-top:16px;\"></h1>\n<h1>This is an h1 tag</h1>\n<h2>This is an h2 tag</h2>\n<h3>This is an h3 tag</h3>\n<h4>This is an h4 tag</h4>\n<h5>This is an h5 tag</h5>\n<h6>This is an h6 tag</h6>\n<p><em>This text will be italic</em>\n<em>This will also be italic</em></p>\n<p><strong>This text will be bold</strong>\n<strong>This will also be bold</strong></p>\n<p><em>You <strong>can</strong> combine them</em></p>\n<ul>\n<li>Item 1</li>\n<li>\n<p>Item 2</p>\n<ul>\n<li>Item 2a</li>\n<li>Item 2b</li>\n</ul>\n</li>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>\n<p>Item 3</p>\n<ol>\n<li>Item 3a</li>\n<li>Item 3b</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"/images/logo.png\" alt=\"GitHub Logo\">\nFormat: <img src=\"url\" alt=\"Alt Text\"></p>\n<p><a href=\"http://github.com\">http://github.com</a> - automatic!\n<a href=\"http://github.com\">GitHub</a></p>\n<p>As Kanye West said:</p>\n<pre><code>> We're living the future so\n> the present is our past.\n</code></pre>\n<p>I think you should use an\n<code>&#x3C;addr></code> element here instead.</p>\n<pre><code class=\"language-javascript\">function fancyAlert(arg) {\n  if(arg) {\n    $.facebox({div:'#foo'})\n  }\n}\n</code></pre>\n<pre><code>function fancyAlert(arg) {\n  if(arg) {\n    $.facebox({div:'#foo'})\n  }\n}\n\ndef foo():\nif not bar:\n    return True\n\n- [x] @mentions, #refs, [links](), **formatting**, and &#x3C;del>tags&#x3C;/del> supported\n</code></pre>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> list syntax required (any unordered or ordered list supported)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> this is a complete item</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> this is an incomplete item</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>First Header</th>\n<th>Second Header</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Content from cell 1</td>\n<td>Content from cell 2</td>\n</tr>\n<tr>\n<td>Content in the first column</td>\n<td>Content in the second column</td>\n</tr>\n</tbody>\n</table>\n<h1 style=\"text-align:center;border-top: solid 1px rgba(102,119,136,.2);padding-top:16px;\"></h1>\n<h2>Intro</h2>\n<h2>Variants</h2>\n<p>{: .-three-column}</p>\n<h3>H2 sections</h3>\n<p>| <code>-one-column</code> | |\n| <code>-two-column</code> | <em>(default)</em>|\n| <code>-three-column</code> | |\n| <code>-left-reference</code> | 3 columns<br><em>(short first column)</em> |\n| <code>-no-hide</code> | Don't hide H2 |</p>\n<p>See: <a href=\"#two-columns\">H2 sections</a></p>\n<h3>H3 sections</h3>\n<p>| <code>-prime</code> | Highlight |</p>\n<p>See: <a href=\"#h3-sections-1\">H3 sections</a></p>\n<h3>Tables</h3>\n<p>| <code>-bold-first</code> | Bold first column |\n| <code>-headers</code> | Show headers |\n| <code>-left-align</code> | Don't right align last column |\n| <code>-mute-em</code> | Lower opacity for italics |\n| <code>-no-wrap</code> | Don't wrap text |\n| <code>-shortcuts</code> | Shortcut keys |</p>\n<p>See: <a href=\"#tables-1\">Tables</a></p>\n<h3>Code</h3>\n<p>| <code>-box-chars</code> | Less line height<br><em>for box drawing chars</em> |\n| <code>-setup</code> | Gray background |\n| <code>-wrap</code> | Enables line-wrapping |</p>\n<p>See: <a href=\"#code-1\">Code</a></p>\n<h3>Paragraphs</h3>\n<p>| <code>-setup</code> | Gray background |\n| <code>-crosslink</code> | Has arrow on the link |\n{: .-gray}</p>\n<p>See: <a href=\"#paragraphs-1\">Paragraphs</a></p>\n<h3>Lists</h3>\n<p>| <code>-also-see</code> | Lighter background |\n| <code>-four-column</code> | |\n| <code>-six-column</code> | |</p>\n<p>See: <a href=\"#lists-1\">Lists</a></p>\n<h3>Adding variants</h3>\n<p>{: .-prime}</p>\n<pre><code>## Section\n{: .-two-column}\n</code></pre>\n<p>Devhints uses Kramdown, and supports adding classes via Kramdown's syntax.</p>\n<h2>H3 sections</h2>\n<p>{: .-three-column}</p>\n<h3>Supported</h3>\n<p>Each section can have the following children:</p>\n<h4>White</h4>\n<ul>\n<li><code>pre</code></li>\n<li><code>ul</code></li>\n<li><code>table</code></li>\n</ul>\n<h4>Gray</h4>\n<ul>\n<li><code>p</code></li>\n<li><code>h4</code></li>\n</ul>\n<h3>Prime section</h3>\n<p>{: .-prime}</p>\n<p>This is a section with <code>{: .-prime}</code>. Notice the fancy highlight! Great for \"getting started\" kind of snippets.</p>\n<h3>H3 section</h3>\n<p>Every box is an H3 section. The box will encompass everything inside the body of the H3.</p>\n<p>This is a basic section with paragraphs in it.</p>\n<h2>Code</h2>\n<p>{: .-three-column}</p>\n<h3>Basic code</h3>\n<pre><code class=\"language-js\">here.is(() => {\n  some.code()\n})\n</code></pre>\n<pre><code class=\"language-js\">here.is.some.more()\n</code></pre>\n<p>Code blocks can be placed one after the other.</p>\n<p>See: <a href=\"/devbytes/\">Cheatsheets</a></p>\n<h3>Code with headings</h3>\n<h4>index.js</h4>\n<p>{: .-file}</p>\n<pre><code class=\"language-js\">here.is(() => {\n  some.code()\n})\n</code></pre>\n<h4>other.js</h4>\n<p>{: .-file}</p>\n<pre><code class=\"language-js\">here.is.some.more()\n</code></pre>\n<p>Code blocks can have headings.</p>\n<h3>Highlighted lines</h3>\n<pre><code class=\"language-js\">app.start(() => {\n  const port = app.server.port\n  console.log(`Started at ${port}`)\n})\n</code></pre>\n<p>{: data-line=\"3\"}</p>\n<p>Add <code>{: data-line=\"3\"}</code> to add line highlights.</p>\n<h3>Multiple highlights</h3>\n<pre><code class=\"language-js\">app.start(() => {\n  const port = app.server.port\n  console.log(`Started at ${port}`)\n})\n</code></pre>\n<p>{: data-line=\"2,3\"}</p>\n<p>Add <code>{: data-line=\"2,3\"}</code> to add multiple line highlights.</p>\n<h3>Setup blocks</h3>\n<pre><code class=\"language-js\">import React from 'react'\n</code></pre>\n<p>{: .-setup}</p>\n<pre><code class=\"language-js\">class Hello extends React.Component {\n  render () {\n    return &#x3C;span>Hello&#x3C;/span>\n  }\n}\n</code></pre>\n<p>Add <code>{: .-setup}</code> to a <code>pre</code> or <code>table</code> or <code>ul</code>.</p>\n<h3>Long lines</h3>\n<pre><code class=\"language-js\">function createNode(nodeName: string, options: { key: string }) {\n  return true\n}\n</code></pre>\n<p>Long lines will have scrollbars.</p>\n<h3>Line wrapping</h3>\n<pre><code class=\"language-js\">&#x3C;script>(function(d,s){if(window.Promise&#x26;&#x26;[].includes&#x26;&#x26;Object.assign&#x26;&#x26;window.Map)return;var js,sc=d.getElementsByTagName(s)[0];js=d.createElement(s);js.src='https://cdn.polyfill.io/v2/polyfill.min.js';sc.parentNode.insertBefore(js, sc);}(document,'script'))&#x3C;/script>\n</code></pre>\n<p>{: .-wrap}</p>\n<p>Add <code>-wrap</code> to wrap long lines.</p>\n<h2>Lists</h2>\n<p>{: .-three-column}</p>\n<h3>Lists</h3>\n<ul>\n<li>This is</li>\n<li>a list</li>\n<li>with a few items</li>\n</ul>\n<p>Here's an extra paragraph after the list.</p>\n<h3>Lists with headings</h3>\n<h4>Part 1</h4>\n<ul>\n<li><code>createElement()</code></li>\n<li><code>componentDidMount()</code></li>\n<li><code>componentWillUnmount()</code></li>\n</ul>\n<h4>Part 2</h4>\n<ul>\n<li><code>shouldComponentUpdate()</code></li>\n<li><code>componentWillReceiveProps()</code></li>\n</ul>\n<p>Here's an extra paragraph after the list.</p>\n<h2>List columns</h2>\n<p>{: .-one-column}</p>\n<h3>Six columns</h3>\n<ul>\n<li>One</li>\n<li>Two</li>\n<li>Three</li>\n<li>Four</li>\n<li>Five</li>\n<li>Six</li>\n<li>Seven</li>\n<li>Eight</li>\n<li>Nine</li>\n<li>Ten</li>\n<li>Eleven\n{: .-six-column}</li>\n</ul>\n<p>Add <code>{: .-six-column}</code> to make large lists.</p>\n<h3>Four columns</h3>\n<ul>\n<li>One</li>\n<li>Two</li>\n<li>Three</li>\n<li>Four</li>\n<li>Five</li>\n<li>Six</li>\n<li>Seven</li>\n<li>Eight</li>\n<li>Nine</li>\n<li>Ten</li>\n<li>Eleven\n{: .-four-column}</li>\n</ul>\n<p>Add <code>{: .-four-column}</code> to make large lists.</p>\n<h3>Also see</h3>\n<ul>\n<li>One</li>\n<li>Two</li>\n<li>Three</li>\n<li>Four</li>\n<li>Five</li>\n<li>Six</li>\n<li>Seven</li>\n<li>Eight</li>\n<li>Nine</li>\n<li>Ten\n{: .-also-see}</li>\n</ul>\n<p>Add <code>{: .-also-see}</code>.</p>\n<h2>Paragraphs</h2>\n<p>{: .-three-column}</p>\n<h3>Basic paragraphs</h3>\n<p>This is a basic section with paragraphs in it. When paragraphs are the first elements in an H3 section's body, they appear as white.</p>\n<h3>Basic paragraphs</h3>\n<pre><code>···\n</code></pre>\n<p>When paragraphs appear after <code>pre</code>/<code>table</code>/<code>ul</code>, they appear with a gray background.</p>\n<h3>Preludes</h3>\n<p>Here's a prelude paragraph. Add <code>{: .-setup}</code> to make paragraphs appear with a gray background.\n{: .-setup}</p>\n<pre><code>···\n</code></pre>\n<h3>Crosslink</h3>\n<p>Add <code>{: .-crosslink}</code> to make big loud external links:</p>\n<pre><code>···\n</code></pre>\n<p><a href=\"/devbytes/\">Home</a>\n{: .-crosslink}</p>\n<h2>Tables</h2>\n<p>{: .-three-column}</p>\n<h3>Basic table</h3>\n<h4>Date</h4>\n<table>\n<thead>\n<tr>\n<th>Example</th>\n<th>Output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>%m/%d/%Y</code></td>\n<td><code>06/05/2013</code></td>\n</tr>\n<tr>\n<td><code>%A, %B %e, %Y</code></td>\n<td><code>Sunday, June 5, 2013</code></td>\n</tr>\n<tr>\n<td><code>%b %e %a</code></td>\n<td><code>Jun 5 Sun</code></td>\n</tr>\n</tbody>\n</table>\n<h4>Time</h4>\n<table>\n<thead>\n<tr>\n<th>Example</th>\n<th>Output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>%H:%M</code></td>\n<td><code>23:05</code></td>\n</tr>\n<tr>\n<td><code>%I:%M %p</code></td>\n<td><code>11:05 PM</code></td>\n</tr>\n</tbody>\n</table>\n<p>This is a basic table with h4's.</p>\n<h3>Shortcuts</h3>\n<p>| <code>V</code> | Vector |\n| <code>P</code> | Pencil |\n| <code>T</code> | Text |\n| <code>L</code> | Line |\n| <code>R</code> | Rectangle |\n| <code>O</code> | Oval |\n| <code>U</code> | Rounded |\n{: .-shortcuts}</p>\n<p>Add <code>{: .-shortcuts}</code> to tables.</p>\n<h3>With headers</h3>\n<table>\n<thead>\n<tr>\n<th>Prefix</th>\n<th>Example</th>\n<th>What</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>//</code></td>\n<td><code>//hr[@class='edge']</code></td>\n<td>Anywhere</td>\n</tr>\n<tr>\n<td><code>./</code></td>\n<td><code>./a</code></td>\n<td>Relative</td>\n</tr>\n<tr>\n<td><code>/</code></td>\n<td><code>/html/body/div</code></td>\n<td>Root</td>\n</tr>\n</tbody>\n</table>\n<p>{: .-headers}</p>\n<p>Add <code>{: .-headers}</code> to add headers.</p>\n<h2>Two columns</h2>\n<h3>One</h3>\n<pre><code>···\n</code></pre>\n<h3>Two</h3>\n<pre><code>···\n</code></pre>\n<h2>Left reference</h2>\n<p>{: .-left-reference}</p>\n<h3>One</h3>\n<pre><code>···\n···\n···\n···\n···\n···\n···\n···\n</code></pre>\n<h3>Two</h3>\n<pre><code>···\n</code></pre>\n<h3>Three</h3>\n<pre><code>···\n</code></pre>\n<h2>One column</h2>\n<p>{: .-one-column}</p>\n<h3>One</h3>\n<pre><code>···\n</code></pre>","frontmatter":{"title":"markdown styling"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog-pages/markdown-styling/"}}}